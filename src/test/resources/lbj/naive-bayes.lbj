import java.util.Vector;
import java.io.File;
import java.lang.reflect.Method;
import java.net.URL;
import java.net.URLClassLoader;

discrete{false, true} Label(Vector v) <- { return ((Double) v.get(0)).doubleValue() > 0.5; }

discrete% Features(Vector v) <-
{
	for (int i = 0; i < 100; ++i) {
		Double value = (Double) v.get(i + 1);
		if (value != null) sense i + 1 : value.doubleValue() > 0.5;
	}
}

discrete Learned(Vector v) <- 
learn Label
	using Features
	from new VectorParser("target/test-classes/test1.train")
	with new NaiveBayes()
	testFrom new VectorParser("target/test-classes/test2.train")
end
